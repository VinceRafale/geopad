extends ../layout

block content

    #newbinfo
    
    #newpost-wrapper
        form.form-inline#newpad(action="/api/pad/new/", method="GET")
            textarea#newpad-post(name="post",placeholder="Write a Post...")
            input(type="hidden", id="newpad-user-lat", name="user_lat", value=null)
            input(type="hidden", id="newpad-user-lng", name="user_lng", value=null)
            input(type="hidden", id="newpad-user-id", name="user_id", value=null)
            input.btn.btn-large#newpad-submit(type="submit", value="New Pad at this Location")

    #main-page-padlist-container
        h2#pad-list-title Browse
        #pad-error			
        #padlist Searching for nearby pads...

block script
    script.
        
        $("#newpad").submit(function() {
            $("#newpad-user-lat").val(page_vars.user_lat);
            $("#newpad-user-lng").val(page_vars.user_lng);
            $("#newpad-user-id").val(localStorage.geopad_userid);
            return true;
        });


        // called a single time after the initial position is retrieved. 
        connections_setup = function(user_corrected_lat, user_corrected_lng) {

            var socket = io.connect("#{domain}"); 

            socket.on('connect', function() {
                socket.emit('join', 'home');
                // join a room just for this user
                socket.emit('join', localStorage.geopad_userid);
            });

            var user_room_success_string = "join-success-"+localStorage.geopad_userid;
            socket.on(user_room_success_string, function() {
                console.log("welcome. retrieving initial set of pads...")
                retrieve_nearby_pads(user_corrected_lat, user_corrected_lng);
                $("#spinner").stop().fadeOut('fast');
            });

            socket.on('padlist', function (data) {
                pad_html = data.html;
                pad_list = data.pads;
                console.log('retrieved list of pads.');
                console.log(pad_list);
                padlist = pad_list;
                pads_recent_activity = [];
                pads_popularity = [];
                pads_created = [];
                
                $("#padlist").html(pad_html);
            });

            socket.on('newpad-notify', function (data) {
                console.log(data);
                if ($("#nopads").length > 0) {
                    $("#nopads").remove();
                }
                $("#padlist").prepend($(data).fadeIn(1000));
                // reset the form values 
                $("input#name").val("");
                $("input#radius").val("");
                $("input#expiry").val("");
            });

            socket.on('pad-settings-update', function(pad_meta) {
                console.log("new pad settings:");
                console.log(pad_meta);
                if (pad_meta.radius == "50") {
                    $("#"+ pad_meta.uuid + " .pad-radius-meta").html("Building ").fadeIn(1000);
                } else if (pad_meta.radius == "500") {
                    $("#"+ pad_meta.uuid + " .pad-radius-meta").html("City Block ").fadeIn(1000);
                } else if (pad_meta.radius == "2000") {
                    $("#"+ pad_meta.uuid + " .pad-radius-meta").html("Neighbourhood ").fadeIn(1000);
                } else if (pad_meta.radius == "10000") { 
                    $("#"+ pad_meta.uuid + " .pad-radius-meta").html("City ").fadeIn(1000);
                }
                console.log(pad_meta.expiry);
                $("#"+ pad_meta.uuid + " .pad-expiry-meta").html("blah").fadeIn(1000);
                $("#"+ pad_meta.uuid + " .pad-expiry-meta").attr("title", pad_meta.expiry);
                $("#"+ pad_meta.uuid + " .pad-expiry-meta").timeago();

                $("#"+ pad_meta.uuid + " .pad-name-meta").html(pad_meta.name).fadeIn(1000);
            });
                


        };

        page_vars = new page_global_vars();
        geolocation_launch(connections_setup, page_vars);


        

        

